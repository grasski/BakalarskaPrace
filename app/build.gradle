plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

    id 'kotlinx-serialization'

}
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        release {
        storeFile file('D:\\zaloha\\UTB\\bakPrace\\app\\release-nevim.jks')
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "zoo.animals"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        mlModelBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    androidResources {
        noCompress 'lite'
        noCompress 'tflite'
    }

}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    def nav_version = "2.5.2"
    def compose_version = "1.3.0-beta03"

    implementation 'androidx.core:core-ktx:1.9.0'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"

    implementation "androidx.compose.material3:material3:1.0.0-beta02"
    implementation "androidx.compose.material3:material3-window-size-class:1.0.0-beta02"


    implementation "androidx.ui:ui-livedata:0.1.0-dev14"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation("androidx.navigation:navigation-compose:$nav_version")

    implementation "com.google.accompanist:accompanist-systemuicontroller:0.17.0"


    // CameraX core library using the camera2 implementation
    def camerax_version = "1.2.0-beta01"
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    // If you want to additionally use the CameraX Lifecycle library
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:${camerax_version}")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:${camerax_version}")


    // Icons
    implementation "androidx.compose.material:material-icons-extended:1.2.1"

    // Coil
    implementation "io.coil-kt:coil-compose:2.2.0"
    implementation "io.coil-kt:coil-gif:2.1.0"

    implementation "androidx.compose.animation:animation-graphics:1.2.1"

    implementation "com.google.accompanist:accompanist-permissions:0.24.10-beta"

    // TensorFlow Lite dependencies
    implementation 'org.tensorflow:tensorflow-lite:2.9.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.9.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.1'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'
    
    // Import the Task Vision Library dependency (NNAPI is included)
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.3.1'
    // Import the GPU delegate plugin Library for GPU inference
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.4.2'


    // Key-value dataStorage
    implementation("androidx.datastore:datastore-preferences:1.0.0")


    // Google maps
    implementation 'com.google.maps.android:maps-compose:2.5.3'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.libraries.places:places:2.6.0'


    // below dependency for using picasso image loading library
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    implementation("io.ktor:ktor-client-core:2.1.2")
    implementation("io.ktor:ktor-client-cio:2.1.2")
    implementation("io.ktor:ktor-serialization-gson:2.1.2")
    implementation("io.ktor:ktor-client-content-negotiation:2.1.2")

}

